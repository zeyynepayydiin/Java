/*----------------------------------------------------------------------------------------------------------------------
    Bir metodun geri dönüş değeri de bir dizi referansı da olabilir.

    Diziler sınıfsal temsil edilmiş yani heap'te tutuluyor.
----------------------------------------------------------------------------------------------------------------------*/

package org.csystem.app;

import arman.Sample;
import arman.Test;
import gorkem.*;

import java.util.Random;
import java.util.Scanner;

import static org.csystem.util.array.ArrayUtil.generateRandomArray;
import static org.csystem.util.array.ArrayUtil.print;

class App {
    public static void main(String [] args)
    {
        Scanner kb = new Scanner(System.in);
        Random random = new Random();

        while (true) {
            System.out.print("Bir sayı giriniz: ");
            int count = kb.nextInt();
            if (count <= 0)
                break;

            int[] a = generateRandomArray(random, count, 0, 100);

            print(a,2);
        }
    }
}
/*----------------------------------------------------------------------------------------------------------------------
    Bir metodun geri dönüş değeri de bir dizi referansı da olabilir.

    Diziler sınıfsal temsil edilmiş yani heap'te tutuluyor.
----------------------------------------------------------------------------------------------------------------------*/

package org.csystem.app;

import arman.Sample;
import arman.Test;
import gorkem.*;

import java.util.Random;
import java.util.Scanner;

import static org.csystem.util.array.ArrayUtil.generateRandomArray;
import static org.csystem.util.array.ArrayUtil.print;

class App {
    public static void main(String [] args)
    {
        Scanner kb = new Scanner(System.in);
        Random random = new Random();

        while (true) {
            System.out.print("Bir sayı giriniz: ");
            int count = kb.nextInt();
            if (count <= 0)
                break;

            double [] a = generateRandomArray(random, count, 0., 100);

            print(a);
        }
    }
}
/*----------------------------------------------------------------------------------------------------------------------
    Sınıf Çalışması: Parametresi ile aldığı int türden bir dizinin elemanları toplamına geri dönen sum metodunu arrayUtil
    sınıfı içerisinde yazınız. Metodunuzu rassal olarak üretilen diziler ile test ediniz.
----------------------------------------------------------------------------------------------------------------------*/
package org.csystem.util.array.test;

import org.csystem.util.array.ArrayUtil;

import java.util.Random;
import java.util.Scanner;
import static org.csystem.util.array.ArrayUtil.generateRandomArray;
import static org.csystem.util.array.ArrayUtil.print;
import static org.csystem.util.array.ArrayUtil.sum;


public class ArrayUtilSumTest {
    public static void run()
    {
        Scanner kb = new Scanner(System.in);

        while (true)
        {
            Random random = new Random();
            System.out.print("Bir sayı giriniz: ");
            int count = Integer.parseInt(kb.nextLine());

            if(count <= 0)
                break;

            int [] a = generateRandomArray(random,count,0,100);
            print(a,2);
            System.out.printf("Total: %d%n", sum(a));
        }
    }
    public static void main(String [] args)
    {
        run();
    }
}
/*----------------------------------------------------------------------------------------------------------------------
    Sıfır elemanlı bir dizi yaratılabilir. Bu durumda şüphesiz dizide bir eleman tutulamaz ancak dizi yaratılmış olur.
    Sıfır elemanlı diziler bazı durumlarda kontrol amaçlı kullanılabilir. Örneğin bir metot bir takım değerlere göre
    bir dizi yaratacak olsun. Metoda geçilen değerlerin geçersiz olma durumunda metot sıfır elemanlı bir diziye geri
    dönebilir. Bu durumda metodu çağıran programcı geri dönen dizinin eleman sayısına bakarak geçerlilik kontrolü yapabilir.
    Şüphesiz bunu yapmanın başka yöntemleri de vardır. Sıfır elemanlı bir dizi aşağıdakilerden biri ile yaratılabilir:
        1. new int[0];
        2. new int[]{};

    Aşağıdaki demo örnekte bu gösterilmeye çalışılmıştır.
----------------------------------------------------------------------------------------------------------------------*/

package org.csystem.app;

import java.util.Random;
import java.util.Scanner;

class App {
    public static void main(String [] args)
    {
        Scanner kb = new Scanner(System.in);
        Random random = new Random();

        while (true) {
            System.out.print("Bir sayı giriniz: ");
            int count = kb.nextInt();

            boolean [] a = Util.generateRandomBooleanArray(random, count);

            if (a.length > 0) {
                for (int i = 0; i < a.length; ++i)
                    System.out.printf("%b ", a[i]);

                System.out.println();
            }
            else
                System.out.printf("Dizi uzunluğu sıfırdan büyük olmalıdır: %d ",count);
        }
    }
}
class Util{
    public static boolean [] generateRandomBooleanArray(Random r, int count)
    {
        if(count <= 0)
            return new boolean[0];
        boolean [] a = new boolean[count];

        for (int i = 0; i < count; ++i)
            a[i] = r.nextBoolean();

        return a;
    }
}
/*----------------------------------------------------------------------------------------------------------------------
    Sınıf Çalışması: Parametresi ile aldığı int türden bir dizinin en büyük elemanına geri dönen max ve en küçük elemanına
    geri dönen metotları ArrayUtil sınıfı içerisinde yazınız ve aşağıdali kodlarla test ediniz.
----------------------------------------------------------------------------------------------------------------------*/
package org.csystem.util.array.test;

import java.util.Random;
import java.util.Scanner;

import static org.csystem.util.array.ArrayUtil.generateRandomArray;
import static org.csystem.util.array.ArrayUtil.print;
import static org.csystem.util.array.ArrayUtil.max;
import static org.csystem.util.array.ArrayUtil.min;
public class ArrayUtilMinMaxTest {

    public static void run(){
        Scanner kb = new Scanner(System.in);
        Random r = new Random();

        while (true){
            System.out.print("Bir sayı giriniz: ");
            int count = Integer.parseInt(kb.nextLine());

            if (count <= 0)
                break;

            int [] a = generateRandomArray(r, count, 0,100);
            print(a,2);

            System.out.printf("En büyük eleman: %02d%nEn küçük eleman :%02d%n",max(a),min(a));
        }
    }
    public static void main(String[] args) {
        run();
    }
}
/*----------------------------------------------------------------------------------------------------------------------
    Sınıf Çalışması: Sayısal loto kupon üreten programı yazınız.
    Açıklama: Bir sayısal loto kuponu birbirinden farklı 6 tane küçükten büyüğe sıralanmış [1,49] aralığındaki sayılardan 
    oluşur.
    Not: Aşağıdaki yaklaşım çok iyi değildir.

    Anahtar Notlar: Arrays sınıfının sort metodu parametres ile aldığı diziyi artan şekilde (ascending order) sıralar.
----------------------------------------------------------------------------------------------------------------------*/
package org.csystem.app.lottery.numeric;

import java.util.Random;
public class NumericLottery { 
    public Random random;

    public NumericLottery(Random r)
    {
        random = r;

    }
    public int [] getNumbers()
    {
        int [] a = new int[6];

        for (int i = 0; i < 6; ++i) {
            boolean repeat;
            do{
                repeat = false;
                a[i] = random.nextInt(1,50);
                for (int k = 0; k < i; ++k)
                    if (a[k] == a[i]) {
                        repeat = true;
                        break;
                    }
            }while (repeat);

        }
        Arrays.sort(a);
        return a;
    }
}
package org.csystem.app.lottery.numeric;

import org.csystem.util.array.ArrayUtil;

import java.util.Random;
import java.util.Scanner;

public class NumericLotteryApp {
    public static void run()
    {
        Scanner kb = new Scanner(System.in);
        NumericLottery numericLottery = new NumericLottery(new Random());

        while (true) {
            System.out.print("Kaç tane kupon oynamak istersiniz? ");
            int n = Integer.parseInt(kb.nextLine());

            if (n <= 0) {
                System.out.println("Lütfen pozitif bir sayı giriniz: ");
                continue;
            }
            while (n-- > 0)
                ArrayUtil.print(numericLottery.getNumbers(),2);
        }
    }

    public static void main(String[] args) {
        run();
    }
}

/*----------------------------------------------------------------------------------------------------------------------
    Sınıf Çalışması: Sayısal loto kupon üreten programı yazınız.
    Açıklama: Bir sayısal loto kuponu birbirinden farklı 6 tane küçükten büyüğe sıralanmış [1,49] aralığındaki sayılardan 
    oluşur.
    Not: Aşağıdaki yaklaşım bir öncekine göre oldukça iyidir.Ancak daha iyileri de vardır. İleride yazılacaktır.

    Anahtar Notlar: Arrays sınıfının sort metodu parametres ile aldığı diziyi artan şekilde (ascending order) sıralar.
----------------------------------------------------------------------------------------------------------------------*/

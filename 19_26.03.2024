/*----------------------------------------------------------------------------------------------------------------------
Sınıf Çalışması: Parametresi ile aldığı int türden bir sayının basamakları toplamına geri dönen sumDigits isimli 
metodu NumberUtil sınıfı içerisinde yazınız ve asağıdaki kod ile test ediniz.

Açıklama: Sayı negatif ise basamkları toplamı pozitif olarak elde edilecek
----------------------------------------------------------------------------------------------------------------------
*/

package csd;

class App{
	public static void main(String [] args) {
		
		NumberUtilSumDigitsTest.run();
		
	}	
	
	class NumberUtilSumDigitsTest{
		
		public static void run() {
			
			java.util.Scanner kb = new java.util.Scanner(System.in);
			
			System.out.print("Bir sayı giriniz: ");
			int val = kb.nextInt();
			
			System.out.printf("%d sayısının basamakları toplamı: %d%n ",val, NumberUtil.sumDigits(val));
			
		}		
	}	
class NumberUtil{
		
		public static int sumDigits(int val) {
			
			java.util.Scanner kb = new java.util.Scanner(System.in);
			
			int total = 0;

			
			while (val != 0) {
				total += val % 10 ;
				
				val/=10;
			}
	
			return Math.abs(total);
			
			
		}		
}

}

/*----------------------------------------------------------------------------------------------------------------------
Sınıf Çalışması: Parametresi ile aldığı int türden bir sayının tersine geri dönen reverse isimli 
metodu NumberUtil sınıfı içerisinde yazınız ve asağıdaki kod ile test ediniz.

----------------------------------------------------------------------------------------------------------------------
*/

package csd;

import java.util.List;

class App{
	public static void main(String [] args) {
		
		NumberUtilSumDigitsTest.run();
		
	}	
	
	class NumberUtilSumDigitsTest{
		
		public static void run() {
			
			java.util.Scanner kb = new java.util.Scanner(System.in);
			
			System.out.print("Bir sayı giriniz: ");
			int val = kb.nextInt();
			
			System.out.printf("%d sayısının basamakları toplamı: %d%n ",val, NumberUtil.sumDigits(val));
			
		}		
	}	
class NumberUtil{
		
		public static int sumDigits(int val) {
			
			java.util.Scanner kb = new java.util.Scanner(System.in);
			
			int result = 0;
			while(val != 0){
				
				result = result * 10 + val % 10;
				val /= 10;
			}

			return result;
			
			
		}		
	}

}

/*----------------------------------------------------------------------------------------------------------------------
While döngüsünün koşul ifadesinde bir değişkene bir metodun geri dönüş değeri atanıp, atanın değer kontrol edilebilir
 bu tarz koşul ifadeleri okunulabilirliği/algılanabilirliği olumsuz etkilemedikten sonra yazılabilir. Aşağıdaki örnekte
 klavyeden sıfır girilene kadar alınan sayıların toplamı bulunmuştur. Örnekte atama işleminin önceliklendirildiğine
 dikkat ediniz.
----------------------------------------------------------------------------------------------------------------------
*/

package csd;

import java.util.List;

class App{
	public static void main(String [] args) {
		
		java.util.Scanner kb = new java.util.Scanner(System.in);
		
		System.out.println("Sayıları girmeye başlayınız: ");
		int total = 0;
		int val;
		
		while((val = Integer.parseInt(kb.nextLine())) != 0)
			total += val;
		
		System.out.printf("Toplam: %d%n", total);
		System.out.println("Tekrar yapıyor musunuz?");
	}	
			
			
}

/*----------------------------------------------------------------------------------------------------------------------
Sınıf Çalışması: Klavyeden sıfır girilene kadar alınan sayılardan pozitif olanlarının ve negatif olanlarının ayrı ayrı
sayılarını ve toplamlarını bulan programı yazınız: Programın mesajlarına ilişkin örnekler şunlardır:

Girilen 3 tane pozitif sayıfının toplamı: 45
Girilen 4 tane negatif sayıfının toplamı: -56

Girilen 3 tane pozitif sayıfının toplamı: 45
Hiç negatif sayı girmediniz

Hiç pozitif sayı girmediniz 
Girilen 4 tane negatif sayıfının toplamı: -56

Hiç pozitif sayı girmediniz
Hiç negatif sayı girmediniz
----------------------------------------------------------------------------------------------------------------------
*/

package csd;

import java.util.List;

class App{
	public static void main(String [] args) {
		
		PosNegCountTotalApp.run();
	}	
			
			
}

class PosNegCountTotalApp{
	
	public static void printPosStatus(int count, int sum) {
		
		if(count != 0)
			System.out.printf("Girilen %d tane pozitif sayının toplamı: %d%n ", count, sum);
		else
			System.out.println("Hiç pozitif sayı girmediniz");

	}
	
	public static void printNegStatus(int count, int sum) {
		
		if(count != 0)
			System.out.printf("Girilen %d tane negatif sayının toplamı: %d%n ", count, sum);
		else
			System.out.println("Hiç negatif sayı girmediniz");

	}
	public static void run() {
		
		
	java.util.Scanner kb = new java.util.Scanner(System.in);
	int posSum, negSum, posCount, negCount;
	int val;
	
	posSum = negSum = posCount = negCount = 0;
	 
	while((val = Integer.parseInt(kb.nextLine())) != 0)
		if(val > 0) {
			posSum += val;
			++posCount;
		}
		else {
			negSum += val;
			++negCount;
		}
	 printPosStatus(posCount, posSum);
	 printNegStatus(negCount, negSum);
	
	}
	
	
}




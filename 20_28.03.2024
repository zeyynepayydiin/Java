/*----------------------------------------------------------------------------------------------------------------------
 for döngü deyimi: for döngü deyimi diğer döngü deyimlerini de neredeyse kapsayan bir döngü deyimidir. for döngüsü
 pratikte genel olarak iterative bir biçimde karşımıza çıksa da bu iteratiflik for döngü deyiminin çalışma biçiminden
 dolayı yapılabilmektedir. Bu sebeple Java programcısının for döngü deyiminin çalışma sistematiğini iyi 
 bilmesi tavsiye edilir. for döngü deyiminin genel biçimi şu şekildedir:
 
 	for([1. kısım]; [2. kısım]; [3. kısım])
 		<deyim>
 	
1. ksıım: Akış for döngü deyimine geldiğinde yapılır. Bir daha yapılmaz.
2. kısım: Koşul ifadesidir, boolean türden olmak zorundadır, akış for döngü deyimine geldiğinde 1. kısım yapıldıktan
sonra da koşul kontrol edilir yani duruma göre döngüye hiç girilmeyebilir.
3. kısım: Döngünün bir adımı tamamlandığında, bir sonraki adım için koşulu kontrol etmeden önce yapılır.

Genel biçimiden de anlaşıldığı gibi kısımlar boş bırakılabilir. Kısımların boş bırakılması durumları ayrıca ele
alınacaktır.

for döngü deyiminin 1. kısmında değişken bildirimi ve initialization yapılabilir. for döngüsünün 1. kısmında 
bildirilen bir değişkene döngü değişkeni (loop variable) de denir. Bu şekilde bildirilen döngü değişkeninin 
faaliyet alanı döngü boyuncadır. Döngüden sonra erişilemez. Bu değişken bir yerel değişken de olduğundan
aynı faaliyet alanında aynı isimde başka bir değişken geçersizdir. Programcı döngü değişkeninin döngüden 
sonraki değerini kullanmayacaksa, birinci kısmında bildirmelidir. Bu durumda 1. kısımda bildirilmeyen bir 
döngü değişkeninin döngüden sonraki değerinin program içerisinde kullanıdığı algısı oluşur. Bu da okunulabilirliği
azaltır.

Anımsanacağı gibi Java'da virgül operatörü yoktur. Ancak for döngü deyiminin birinci ve üçüncü kısmında belirli 
koşullar altında virgül atomu kullanılabilir. İkinci kısımda kullanılamaz. Birinci ve üçüncü kısımlarda virgül
atomu genel  olarak birden fazla ifadeyi ayırmak için kullanılır. Birinci kısımda kullanılacaksa ve değişken
bildirimi yapılacaksa başka bir 

----------------------------------------------------------------------------------------------------------------------
*/
package csd;

import java.util.List;

class App{
	public static void main(String [] args) {
		
		java.util.Scanner kb = new java.util.Scanner(System.in);
		
		
			System.out.print("Bir sayı giriniz: ");
			int n = kb.nextInt();
			int i; 
			
			for(i = 0; i < n; ++i) // i++ operatörü de kullanılsa aynı iş hiçbir fark yok ++ operatörünün ürettiği değeri kullanmıyoruz i'yi artırmak için kullanıyoruz 
				System.out.printf("%d ", i);
			
			System.out.println(" ");
			System.out.println("Tekrar yapıyor musunuz?");
	}				
}

/*----------------------------------------------------------------------------------------------------------------------
 for döngüsünde yanlışlıkla ; kullanılması durumu.
----------------------------------------------------------------------------------------------------------------------
*/
package csd;

import java.util.List;

class App{
	public static void main(String [] args) {
		
		java.util.Scanner kb = new java.util.Scanner(System.in);
		
		
			System.out.print("Bir sayı giriniz: ");
			int n = kb.nextInt();
			int i; 
			
			for(i = 0; i < n; ++i); // boş deyim var, program çalışır ancak doğru çalışmaz ama i'yi deyim içinde tanımlasaydık alt satırda i için error verirdi
				System.out.printf("%d ", i);
			
			System.out.println(" ");
			System.out.println("Tekrar yapıyor musunuz?");
	}				
}

/*----------------------------------------------------------------------------------------------------------------------
 Aşağıdaki örnekte döngü değişkeni döngü içerisinde bildirildiğinden yanlışlıkla ; kullanıldığında error oluşur
----------------------------------------------------------------------------------------------------------------------
*/
package csd;

import java.util.List;

class App{
	public static void main(String [] args) {
		
		java.util.Scanner kb = new java.util.Scanner(System.in);
		
		
			System.out.print("Bir sayı giriniz: ");
			int n = kb.nextInt();
		
			
			for(int i = 0; i < n; ++i); 
				System.out.printf("%d ", i); //error
			
			System.out.println(" ");
			System.out.println("Tekrar yapıyor musunuz?");
	}				
}


/*----------------------------------------------------------------------------------------------------------------------
 Aşağıdaki örnekte birinci ve üçüncü kısımda virgül atomu kullanılmıştır.
----------------------------------------------------------------------------------------------------------------------
*/
package csd;

import java.util.List;

class App{
	public static void main(String [] args) {
		
		java.util.Scanner kb = new java.util.Scanner(System.in);
		
		
			System.out.print("İki sayı giriniz: ");
			int n = kb.nextInt();
			int m = kb.nextInt();
			
			for(int i = 0, k = m - 1; i < n && k >= 0; ++i, --k)
				System.out.printf("%d, %d)%n", i,k);
			
			System.out.println(" ");
			System.out.println("Tekrar yapıyor musunuz?");
	}					
}

/*----------------------------------------------------------------------------------------------------------------------
 Aşağıdaki örnekte birinci ve üçüncü kısımda virgül atomu kullanılmıştır.
----------------------------------------------------------------------------------------------------------------------
*/
package csd;

import java.util.List;

class App{
	public static void main(String [] args) {
		
		java.util.Scanner kb = new java.util.Scanner(System.in);
		
		
			System.out.print("İki sayı giriniz: ");
			int n = kb.nextInt();
			int m = kb.nextInt();
			
			for(int i = 0, long k = m - 1; i < n && k >= 0; ++i, --k)
				System.out.printf("%d, %d)%n", i,k); 
			
			System.out.println(" ");
			System.out.println("Tekrar yapıyor musunuz?");
	}					
}


/*----------------------------------------------------------------------------------------------------------------------
 Değişken bildirimi yapamayız.
----------------------------------------------------------------------------------------------------------------------
*/
package csd;

import java.util.List;

class App{
	public static void main(String [] args) {
		
		java.util.Scanner kb = new java.util.Scanner(System.in);
		
		
			System.out.print("İki sayı giriniz: ");
			int n = kb.nextInt();
			int m = kb.nextInt();
			
			for(int i = 0, long k = m - 1; i < n && k >= 0; ++i, --k)// error
				System.out.printf("%d, %d)%n", i,k); 
			
			System.out.println(" ");
			System.out.println("Tekrar yapıyor musunuz?");
	}					
}
/*----------------------------------------------------------------------------------------------------------------------
Aşağıdaki demo örneği inceleyiniz.
----------------------------------------------------------------------------------------------------------------------
*/
package csd;

import java.util.List;

class App{
	public static void main(String [] args) {
		
		java.util.Scanner kb = new java.util.Scanner(System.in);
		
		
			System.out.print("İki sayı giriniz: ");
			int n = kb.nextInt();
			int i = 0;
			
			for(System.out.println("Birinci kısım: "); i < n; System.out.println("Üçüncü kısım"), i++)
				System.out.println("Deyim"); 
			
			
			System.out.println("Tekrar yapıyor musunuz?");
	}					
}


/*----------------------------------------------------------------------------------------------------------------------
 Aşağıdaki demo örnekte klavyeden 0 girilene kadar alınan sayıların toplamı bulunmaktadır. for döngüsünde boş deyim
kullanıldığına dikkat ediniz.
----------------------------------------------------------------------------------------------------------------------
*/
package csd;

import java.util.List;

class App{
	public static void main(String [] args) {
		
		java.util.Scanner kb = new java.util.Scanner(System.in);
  
      int total = 0;
			int val;
			
			for(System.out.println("Sayıları girmeye başlayınız: "),System.out.println("Bir sayı giriniz") ;
                    (val = Integer.parseInt(kb.nextLine())) != 0; total += val, System.out.println("Bir sayı giriniz: "));
			
			System.out.printf("Toplam:%d%n",total);
			
			System.out.println("Tekrar yapıyor musunuz?");
	}					
}

/*----------------------------------------------------------------------------------------------------------------------
Sınıf Çalışması: Paratmresi ile aldığı int türden a ve b değeri için a'nın b'inci kuvvetini döndüren pow isimli
metodu NumberUtil sınıfı içerisinde yazınız ve aşağıdaki kod ile test ediniz

Açıklama:
	-Math sınıfı kullanılmayacak
	-b'nin negatif değerleri için metot 1 değerine geri dönecektir.
----------------------------------------------------------------------------------------------------------------------
*/
package csd;

import java.util.List;

class App{
	public static void main(String [] args) {
		
		java.util.Scanner kb = new java.util.Scanner(System.in);
		
		NumberUtilPowTest.run();
	}			
	
class NumberUtilPowTest{
	public static void run()
	{
		java.util.Scanner kb = new java.util.Scanner(System.in);
		
		while(true)
		{
			System.out.println("a ve b'yi giriniz: ");
			int a = kb.nextInt();
			int b = kb.nextInt();
			System.out.printf("pow(%d,%d) = %d%n",a,b,NumberUtil.pow(a, b));
			
			if(a == 0 && b == 0)
				return;
		}
		
	}
}
class NumberUtil{
		public static int pow(int a, int b)
		{
			int result = 1;
		
			for(int i = 0; i < b; ++i) {
				result *= a;
			}
			return result;
		}
	}
}


Metotlar ne işe yarar? Ya da başka bir deyişle bir problemin çözümünde neden metotlar yazalım? Aşağıda metot yazılmasına
ilişkin durumlar genel olarak ele alınmıştır

-Bir işi çok fazla yerde yapmak kod tekrarına yol açar. Yazılım geliştirmede temel prensip "zorunlu olmadıkça kod tekrarı
yapılmamalıdır (do not repeat yourself)" şeklindedir. Bu durumda programcı bir metot yazarak ilgili yerlerde o metodu çağırır.

- Bir problemin çözümü metot çağırma yerine her yerden kodun yazılması biçiminde "implemente" edilmişse, bu durumda 
programcı problemin çözümünde bir değişiklik yapmak isterse veya bir hata olduğunda düzeltmek için her yerde bu değişiklikleri
yapmak zorundadır. Bu da çoğu zaman zor olacaktır.

- Bir problemin çözümü metot çağırma yerin her yerde kodun yazılması biçiminde "implemente" edilmişse, bu durumda kodun
okunabilirliği/algılanabilirliği azalabilir. Yani metot çağırarak kodun okunabilirliği/algılanabilirliği artırılmış olur.

- Metot yazıldığında başka projelere taşınarak da kullanılabilir (code reusability).

- Metodu çağıram programcı metodun nasıl yazıldığına ilişkin detayları bilmek zorunda değildir. Çünkü metodun çağrıldığı 
noktada metodun nasıl yazıldığının önemi yoktur. Ne yaptığı önemlidir.

- Bir kod parçasının metot olarak yazılması onun bağımsız olarak test edilip doğrulanması veya varsa hataların düzeltilmesi
açısından da önemlidir.

Anahtar Notlar: İleride ele alacağımız Nesne Yönelimli Programlama Tekniği'ne (Object Oriented Programming Paradigm)
ilişkin kavramlar ile kodun parçalara ayrılması metotlar dışında daha yüksek seviyede de yapılabilecektir.


System.out.printf metodu ile formatlı yazdırma yapılabilir. printf metodunun birinci parametresine geçen argüman bir yazı
(string literal vb.) olmalıdır. Bu metot birinci parametresi ile birlikte değişken sayıda argüman alabilecek şekilde
tasarlanmıştır. Değişken sayıda argüman alan metotların (vararg methods) bildiriminin nasıl yapıldığı bu bölümde ele 
alınmayacak. printf metodunun birinci parametresine ilişkin yazının içerisinde % karakteri ile birlikte özel bazı karakterler 
kullanılabilmektedir. Bu özel karakterlere format karakterleri (format specifiers) denir. Bir format karakterinin yazı 
içerisinde % karakteri ile birlikte kullanılmasına ise yer tutucu (place holder) denir. Bir format karakteri özel bazıları 
dışında bir türe karşılık gelir ve o yer tutucu yerine printf'e geçilen argümanların değerleri yerleştirilerek yazı 
formatlanır. Format karakterlerinin bazıları şunlardır: 



Anahtar Notlar: printf metodu gibi kullanılan ancak printf'den daha fazla karşımıza çıkan bazı metodlar için printf metodunun
formatlama detaylarının öğrenilmesi önemlidir.

















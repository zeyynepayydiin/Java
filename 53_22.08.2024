/*----------------------------------------------------------------------------------------------------------------------
    Bir metodun geri dönüş değeri de bir dizi referansı da olabilir.

    Diziler sınıfsal temsil edilmiş yani heap'te tutuluyor.
----------------------------------------------------------------------------------------------------------------------*/

package org.csystem.app;

import arman.Sample;
import arman.Test;
import gorkem.*;

import java.util.Random;
import java.util.Scanner;

import static org.csystem.util.array.ArrayUtil.generateRandomArray;
import static org.csystem.util.array.ArrayUtil.print;

class App {
    public static void main(String [] args)
    {
        Scanner kb = new Scanner(System.in);
        Random random = new Random();

        while (true) {
            System.out.print("Bir sayı giriniz: ");
            int count = kb.nextInt();
            if (count <= 0)
                break;

            int[] a = generateRandomArray(random, count, 0, 100);

            print(a,2);
        }
    }
}
/*----------------------------------------------------------------------------------------------------------------------
    Bir metodun geri dönüş değeri de bir dizi referansı da olabilir.

    Diziler sınıfsal temsil edilmiş yani heap'te tutuluyor.
----------------------------------------------------------------------------------------------------------------------*/

package org.csystem.app;

import arman.Sample;
import arman.Test;
import gorkem.*;

import java.util.Random;
import java.util.Scanner;

import static org.csystem.util.array.ArrayUtil.generateRandomArray;
import static org.csystem.util.array.ArrayUtil.print;

class App {
    public static void main(String [] args)
    {
        Scanner kb = new Scanner(System.in);
        Random random = new Random();

        while (true) {
            System.out.print("Bir sayı giriniz: ");
            int count = kb.nextInt();
            if (count <= 0)
                break;

            double [] a = generateRandomArray(random, count, 0., 100);

            print(a);
        }
    }
}
/*----------------------------------------------------------------------------------------------------------------------
    Sınıf Çalışması: Parametresi ile aldığı int türden bir dizinin elemanları toplamına geri dönen sum metodunu arrayUtil
    sınıfı içerisinde yazınız. Metodunuzu rassal olarak üretilen diziler ile test ediniz.
----------------------------------------------------------------------------------------------------------------------*/
package org.csystem.util.array.test;

import org.csystem.util.array.ArrayUtil;

import java.util.Random;
import java.util.Scanner;
import static org.csystem.util.array.ArrayUtil.generateRandomArray;
import static org.csystem.util.array.ArrayUtil.print;
import static org.csystem.util.array.ArrayUtil.sum;


public class ArrayUtilSumTest {
    public static void run()
    {
        Scanner kb = new Scanner(System.in);

        while (true)
        {
            Random random = new Random();
            System.out.print("Bir sayı giriniz: ");
            int count = Integer.parseInt(kb.nextLine());

            if(count <= 0)
                break;

            int [] a = generateRandomArray(random,count,0,100);
            print(a,2);
            System.out.printf("Total: %d%n", sum(a));
        }
    }
    public static void main(String [] args)
    {
        run();
    }
}
/*----------------------------------------------------------------------------------------------------------------------
    Sıfır elemanlı bir dizi yaratılabilir. Bu durumda şüphesiz dizide bir eleman tutulamaz ancak dizi yaratılmış olur.
    Sıfır elemanlı diziler bazı durumlarda kontrol amaçlı kullanılabilir. Örneğin bir metot bir takım değerlere göre
    bir dizi yaratacak olsun. Metoda geçilen değerlerin geçersiz olma durumunda metot sıfır elemanlı bir diziye geri
    dönebilir. Bu durumda metodu çağıran programcı geri dönen dizinin eleman sayısına bakarak geçerlilik kontrolü yapabilir.
    Şüphesiz bunu yapmanın başka yöntemleri de vardır. Sıfır elemanlı bir dizi aşağıdakilerden biri ile yaratılabilir:
        1. new int[0];
        2. new int[]{};

    Aşağıdaki demo örnekte bu gösterilmeye çalışılmıştır.
----------------------------------------------------------------------------------------------------------------------*/

package org.csystem.app;

import java.util.Random;
import java.util.Scanner;

class App {
    public static void main(String [] args)
    {
        Scanner kb = new Scanner(System.in);
        Random random = new Random();

        while (true) {
            System.out.print("Bir sayı giriniz: ");
            int count = kb.nextInt();

            boolean [] a = Util.generateRandomBooleanArray(random, count);

            if (a.length > 0) {
                for (int i = 0; i < a.length; ++i)
                    System.out.printf("%b ", a[i]);

                System.out.println();
            }
            else
                System.out.printf("Dizi uzunluğu sıfırdan büyük olmalıdır: %d ",count);
        }
    }
}
class Util{
    public static boolean [] generateRandomBooleanArray(Random r, int count)
    {
        if(count <= 0)
            return new boolean[0];
        boolean [] a = new boolean[count];

        for (int i = 0; i < count; ++i)
            a[i] = r.nextBoolean();

        return a;
    }
}

/*----------------------------------------------------------------------------------------------------------------------
    Seçerek sıralama algoritmasında en küçük eleman bulunur, ilk eleman ile değiştirilir. Dizi bir daraltılır, aynı işlem
    daraltılmış dizi için yapılır. Böylece ilerlenir.
    Örneğin:
        22 8 66 -7 34 -6 17 21 68 45 -10 3 16
        -10 8 66 -7 34 -6 17 21 68 45 22 3 16
        -10 -7 66 8 34 -6 17 21 68 45 22 3 16
----------------------------------------------------------------------------------------------------------------------*/
/*----------------------------------------------------------------------------------------------------------------------
    Bölümleme (Partition) Algoritması: Bu algoritmada amaç, bir dizinin belirli bir koşula uyan elemanlarının dizinin
    başında, koşuula uymayanların ise dizinin sonuna getirilmesidir. Bu algoritma başka bir dizi yaratılmadan da
    gerçekleştirilebilir (implementation). Zaten başka bir dizi kullanımı efektif değildir. Dizi bölümlendikten sonra
    ilk koşula uymayan elemanın bulunduğu indeks değerine "bölümleme noktası (partition point)" denir. Bu durumda dizinin
    tüm elemanları ilgili koşula uyuyor ise partition point'in değeri dizinin uzunluğudur, dizinin hiçbir elemanı koşula
    uymuyorsa partition point'in değeri sıfırdır. Bu işlem tipik olarak şu şekilde yapılabilir: Önce dizinin koşula uymayan
    ilk elemanı bulunur. Sonra ikinci bir indeks, koşula uymayan ilk elemandan bir sonraki elemana konumlandırılır. Eğer
    eleman (ikinci indeksteki eleman) koşula uyuyorsa koşula uymayan eleman ile (birinci indeksteki eleman) yer değiştirilir ve
    birinci indeks artırılır. İkinci indeks her durumda artırılır. Böylece ilerlenir. Bu durumda birinci indeks partition
    point olara elde edilmiş olur.
    Örneğin:
        2 8 66 7 34 6 17 21 68 45 10 3 16
        dizisinde 11 değerinden küçük olan elemanların bölümlenmesi şu şekilde elde edilebilir.
        1. indeks: 2
        2. indeks: 3

        2 8 7 66 34 6 17 21 68 45 10 3 16
        1. indeks: 3
        2. indeks: 4

        2 8 7 66 34 6 17 21 68 45 10 3 16
        1. indeks: 3
        2. indeks: 5

        2 8 7 6 34 66 17 21 68 45 10 3 16
        1. indeks: 4
        2. indeks: 6
----------------------------------------------------------------------------------------------------------------------*/
package org.csystem.util.array.test;

import java.util.Random;
import java.util.Scanner;

import static org.csystem.util.array.ArrayUtil.*;

public class ArrayUtilPartitionTest {
    public static void run()
    {
        Random random = new Random();
        Scanner kb = new Scanner(System.in);

        while (true) {
            System.out.print("Input count: ");
            int count = Integer.parseInt(kb.nextLine());

            if (count <= 0)
                break;

            int [] a = generateRandomArray(random, count, 0, 100);

            print(a, 2);
            System.out.print("Input threshold");
            int threshold = Integer.parseInt(kb.nextLine());

            System.out.printf("Threshold: %d%n", threshold);
            int partitionPoint = partition(a,threshold);

            print(a);
            System.out.printf("Partition Point: %d%n",partitionPoint);
        }
    }
    public static void main(String[] args)
    {
        run();
    }

}
